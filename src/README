# NVIDIA Magnificent 7 Pairs Trading Strategy

A simple backtesting implementation for pairs trading NVIDIA (NVDA) against other Magnificent 7 stocks using daily price changes.

## Strategy Overview

This strategy explores statistical arbitrage opportunities between NVIDIA and other Magnificent 7 stocks (AAPL, MSFT, AMZN, META, GOOGL, AMD) based on the premise that:
- Tech megacaps often show correlated price movements
- NVIDIA's unique position in AI/ML hardware can create temporary divergences in average change rates.
- These divergences tend to mean-revert, creating trading opportunities

## Performance Summary

This strategy backtested this strategy from April 2023 until October 2024, beating the Dow Jones Industrial Average by 6%.

## Implementation Details

The strategy:
First, it calculates the spread (other M7 stock - NVDA) between the 20-day moving average daily changes of NVDA and other 
Magnificent 7 stocks. If the daily spread reaches below the 20-day moving average of the spread twice the 20-day standard deviation 
of the spreads between the two stocks, it shows that the stock has been performing markedly worse than Nvidia, thereby generating
a buy signal. Conversely, if the daily spread reaches above the 20 day moving average of the spread plus twice the 20-day standard 
deviation of the spreads between the two stocks, it means that Nvidia has been growing slower than usual, and therefore a buy signal for Nvidia 
is generated.

When a position is held, it is sold as the spread returns to the 20-day moving average.


### Limitations

This is a basic implementation that does not account for transaction costs and assumes perfect execution with a relatively small portfolio.

## Usage

python3 pair.py

## Dependencies

- Python 3.x

## Future Improvements

Potential areas for enhancement:
- Add transaction costs
- Implement dynamic position sizing
- Add more sophisticated entry/exit signals
- Include volatility adjustments
- Add visualization of trades

## Contributing

Feel free to fork and submit PRs to improve the implementation.


Copyright (c) 2024 github.com/jasongu123. All rights reserved.

This code is provided for viewing/educational purposes only. No part of this code
mag be used, copied or distributed without proper permission.

